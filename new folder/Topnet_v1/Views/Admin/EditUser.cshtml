@model Topnet_v1.Models.ExpandedUserDTO
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section Menu {
    @Scripts.Render("~/Scripts/Elements/Modals/menu")
}

@Styles.Render("~/Styles/Elements/Modals")

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="box box-info">
            <div class="box-header with-border">
                <h3 class="box-title">Horizontal Form</h3>
            </div>
            <form class="form-horizontal">
                <div class="box-body">
                    @Html.ValidationSummary(true,
                             "",
                             new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor(model => model.UserName,
                                 htmlAttributes: new { @class = "control-label col-sm-2" })
                        <div class="col-sm-10">
                            @Html.DisplayFor(model => model.UserName,
                                     new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.UserName, "",
                                     new { @class = "text-danger" })
                        </div>
                    </div>
                    <br /><br />

                    <div class="form-group">
                        @Html.LabelFor(model => model.Email,
                                 htmlAttributes: new { @class = "control-label col-sm-2" })
                        <div class="col-sm-10">
                            @Html.EditorFor(model => model.Email,
                                     new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Email,
                                     "",
                                     new { @class = "text-danger" })
                        </div>
                    </div>

                    <br /><br />
                    <div class="form-group">
                        @Html.LabelFor(model => model.Password,
                                 htmlAttributes: new { @class = "control-label col-sm-2" })
                        <div class="col-sm-10">
                            @Html.EditorFor(model => model.Password,
                                     new { htmlAttributes = new { @class = "form-control", @type = "password" } })
                            @Html.ValidationMessageFor(model => model.Password,
                                     "",
                                     new { @class = "text-danger" })
                        </div>
                    </div>

                    <br /><br />
                    <div class="form-group">
                        @Html.LabelFor(model => model.LockoutEndDateUtc,
                                 htmlAttributes: new { @class = "control-label col-sm-2" })
                        <div class="col-sm-10">
                            @Html.DisplayFor(model => model.LockoutEndDateUtc,
                                     new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                    </div>
                </div>
                <div class="box-footer">
                    <div class="form-group">
                        <div class="col-sm-offset-2 col-sm-10">
                            <input type="submit" value="Save" class="btn btn-info pull-right" />
                            @Html.ActionLink("Edit Roles", "EditRoles",
                                     new { UserName = Model.UserName },
                                     new { @class = "btn btn-default" })
                            @Html.ActionLink("Back to List",
                                     "Index",
                                     null,
                                     new { @class = "btn btn-default" })
                        </div>
                    </div>
                </div>

        </form>
        </div>



    @*<div class="example-modal">
        <div class="modal">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                        <h4 class="modal-title">Default Modal</h4>
                    </div>
                    <div class="modal-body">
                        <form class="form-horizontal">
                            <div class="box-body">
                                @Html.ValidationSummary(true,
                                                   "",
                                                   new { @class = "text-danger" })
                                <div class="form-group">
                                    @Html.LabelFor(model => model.UserName,
                                                       htmlAttributes: new { @class = "control-label col-sm-2" })
                                    <div class="col-sm-10">
                                        @Html.DisplayFor(model => model.UserName,
                                                           new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.UserName, "",
                                                           new { @class = "text-danger" })
                                    </div>
                                </div>
                                <br /><br />

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Email,
                                                       htmlAttributes: new { @class = "control-label col-sm-2" })
                                    <div class="col-sm-10">
                                        @Html.EditorFor(model => model.Email,
                                                           new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Email,
                                                           "",
                                                           new { @class = "text-danger" })
                                    </div>
                                </div>

                                <br /><br />
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Password,
                                                       htmlAttributes: new { @class = "control-label col-sm-2" })
                                    <div class="col-sm-10">
                                        @Html.EditorFor(model => model.Password,
                                                           new { htmlAttributes = new { @class = "form-control", @type = "password" } })
                                        @Html.ValidationMessageFor(model => model.Password,
                                                           "",
                                                           new { @class = "text-danger" })
                                    </div>
                                </div>

                                <br /><br />
                                <div class="form-group">
                                    @Html.LabelFor(model => model.LockoutEndDateUtc,
                                                       htmlAttributes: new { @class = "control-label col-sm-2" })
                                    <div class="col-sm-10">
                                        @Html.DisplayFor(model => model.LockoutEndDateUtc,
                                                           new { htmlAttributes = new { @class = "form-control" } })
                                    </div>
                                </div>
                            </div>
                            <div class="modal-footer">
                                <div class="col-sm-offset-2 col-sm-10">
                                    <input type="submit" value="Save" class="btn btn-info pull-right" />
                                    @Html.ActionLink("Edit Roles", "EditRoles",
                               new { UserName = Model.UserName },
                               new { @class = "btn btn-default" })
                                    @Html.ActionLink("Back to List",
                           "Index",
                           null,
                           new { @class = "btn btn-default" })
                                </div>
                            </div>


                        </form>

                    </div>
                </div>
            </div>
        </div>
    </div>*@
}
